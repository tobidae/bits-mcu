
I just have it in reader mode and I used a subset of what you gave me.  I actually ripped out the tkinter code and just output to console.
 
Here¡¯s the python code.  Maybe the other person would appreciate a more slimlined version so feel free to share.
 
Thanks,
 
#!/usr/bin/env python
import pymysql.cursors
import time
import serial
import binascii
#import pudb; pu.db
 
class Database:
    host = 'localhost'
    user = 'root'
    password = 'raspberry'
    db = 'rfid'
 
    def __init__(self):
        self.connection = pymysql.connect(self.host, self.user, self.password, self.db)
        self.cursor = self.connection.cursor()
 
       
    def insert(self, query):
        try:
            self.cursor.execute(query)
            self.connection.commit()
        except Exception as e:
            print(str(e))
            self.connection.rollback()
   
#    def delete(self, query):
#        try:
#            self.cursor.execute(query)
#            self.connection.commit()
#        except Exception as e:
#            print(str(e))
#            self.connection.rollback()
 
 
    def query(self, query):
        cursor = self.connection.cursor(pymysql.cursors.DictCursor)
        cursor.execute(query)
        return cursor.fetchall()
 
    def rowcount(self, query):
        cursor = self.connection.cursor(pymysql.cursors.DictCursor)
        cursor.execute(query)
        return cursor.rowcount
 
    def __del__(self):
        self.connection.close()
 
def view(rfidvalue):
#    if rfidvalue[0:8] == "e2000015":
        sql = ("SELECT * FROM `rfid_data` where rfid_tag = '%s' GROUP BY `id` ASC") % rfidvalue
        dbrows = db.query(sql)
        rows = db.rowcount(sql)
        if rows == 0:
            sql = "INSERT INTO `rfid_data`(`rfid_tag`, `time`)" \
                  " VALUES ('%s', now())" % rfidvalue
            db.insert(sql)
   
def startscanning(): #function that scan rfid
    size = ser.inWaiting()
    if size:
        x = ser.read(size)
        time.sleep(1)
        x = binascii.hexlify(x)
        q = x.decode("ascii")  #converting scanned data
        print(q[4:27]) #converting scanned data
        rfidvalue = q[4:27]
        view(rfidvalue)
    else:
 
        print('Scanning...')
 
rfidtag =[]
# class RFIDReads:
 
if __name__ == "__main__":
 
    db = Database()
   
    try:
#        ser = serial.Serial(port='/dev/ttyUSB0', baudrate=9600, timeout=.0001)
#        ser = serial.Serial(port='/dev/ttyS0', baudrate=9600, timeout=.0001)
        ser = serial.Serial(port='/dev/serial0', baudrate=9600, timeout=.0001)
#        ser = serial.Serial(port='/dev/ttyAMA0', baudrate=9600, timeout=.0001)
    except:
        ser = serial.Serial(port='/dev/ttyUSB1', baudrate=9600, timeout=.0001)
    while True:
        startscanning()
 
 